name: Build project on Push/PR
on: 
  push:  {branches: [main, dev] }
  pull_request:
  workflow_dispatch: {}
jobs:
  build:
    name: Builds the project
    runs-on: ubuntu-latest
    strategy:
      matrix:
        unityVersion: 
          - 2020.3.13f1
        targetPlatform:
          - Android # Build android .apk
          #- iOS # Build iOS player
          - WebGL # Build WebGL
    steps:
      # checkout 
      - name: checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true

      # cache library folder from previous build to cut down build time
      - name: cache library folder
        uses: actions/cache@v2
        with: 
          path: client/TestProject/Library/
          key: Library-TestProject-TargetPlatform
          restore-keys: |
            Library-TestProject-
            Library-
      
      # test
      #- name: Run tests
      #  uses: game-ci/unity-test-runner@v2
      #  env:
      #    UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
      #  with:
      #    projectPath: client/TestProject/
      #    githubToken: ${{ secrets.ACCESS_TOKEN_GITHUB }}

      # build
      - name: Build project
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          projectPath: client/TestProject/

      # output
      - uses: actions/upload-artifact@v2
        with:
          name: Build
          path: build
    
  #buildForAllPlatforms:
  #  name: Build for ${{ matrix.targetPlatform }} on Unity version ${{ matrix.unityVersion }}
  #  runs-on: ubuntu-latest
  #  needs: build
  #  strategy:
  #    fail-fast: false
  #    matrix:
  #      unityVersion: 
  #        - UNITY_2019_4_26f1
  #      targetPlatform:
  #        - Android # Build android .apk
  #        - iOS # Build iOS player
  #  steps:
  #    - uses: actions/checkout@v2
  #      with:
  #        lfs: true
  #    - uses: actions/cache@v2
  #      with: 
  #        path: client/TestProject/Library
  #        key: Library-${{ matrix.targetPlatform }}  
  #    - name: Free disk space
  #      run: |
  #        sudo swapoff
  #        sudo rm -f /swapfile
  #        sudo apt clean
  #        docker rmi $(docker image la -aq)
      #- name: create Android keystore
          
    #- name: Unity - Test Runner
      #  uses: game-ci/unity-test-runner@v2
      #  env:
      #    UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
      #  with:
      #    projectPath: client/TestProject/
      #    githubToken: ${{ secrets.ACCESS_TOKEN_GITHUB }}
          
          # targetPlatform: WebGL
        
      # For Unity Professional Licenses:
      #- uses: game-ci/unity-builder@v2
      #  env:
      #    UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
      #    UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      #    UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
      #  with:
      #    targetPlatform: WebGL      


      
